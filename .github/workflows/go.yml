name: Go
on:
  push:         # 이 workflow를 실행시킬 조건 (여기서는 push가 발생했을 때 workflow가 실행됨)
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1 # 이미 만들어진 명령이 있는 경우 가져다 사용
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        ls -l
        go mod init github.com/YonghoChoi/depromeet-dongbang
        go mod tidy

    - name: Build
      run: |
        ls -l
        cd ./cmd/api
        go build -v .
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws_access_key }}
        aws-secret-access-key: ${{ secrets.aws_secret_key }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: dongbang-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd $GITHUB_WORKSPACE
        export VERSION=`cat version.txt`
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSIONK
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION"

    - name: Deploy dongbang
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: dongbang-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client
        mkdir -p ~/.ssh
        echo '${{ secrets.ssh_private_key }}' | tee ~/.ssh/dongbang
        chmod 400 ~/.ssh/dongbang

        echo '$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION'
        export VERSION=`cat version.txt`
        ssh -i ~/.ssh/dongbang -t ubuntu@dongbang.yonghochoi.com kubectl set image deployment/dongbang-api dongbnag-api=$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION